basePath: /api
definitions:
  v1.GroupModel:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  v1.UserModel:
    properties:
      display_name:
        type: string
      groups:
        items:
          $ref: '#/definitions/v1.GroupModel'
        type: array
      identifier:
        type: string
    type: object
  v1.loginRequest:
    properties:
      ident:
        type: string
      password:
        type: string
    type: object
  v1.loginResponse:
    properties:
      token:
        type: string
    type: object
  v1.registerRequest:
    properties:
      display_name:
        type: string
      email:
        type: string
      password:
        type: string
    type: object
  v1.renewStruct:
    properties:
      token:
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/auth/login:
    post:
      description: Loging to user and authenticate with the backend
      parameters:
      - description: User login information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.loginResponse'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Login user
      tags:
      - auth
  /v1/auth/renew:
    post:
      description: Renews token, preventing timeouts
      parameters:
      - description: Token to renew
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.renewStruct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.renewStruct'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Renew token
      tags:
      - auth
  /v1/group/all:
    get:
      description: Gets all public groups
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.GroupModel'
            type: array
        "500":
          description: Internal Server Error
      summary: Gets groups
      tags:
      - group
  /v1/user/get/{ident}:
    get:
      description: Fetches user information and groups
      parameters:
      - description: User identifier
        in: path
        name: ident
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.UserModel'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Fetch user
      tags:
      - user
  /v1/user/register:
    post:
      description: Registers a new user given the provided arguments
      parameters:
      - description: User registration information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.registerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.UserModel'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Register a new user
      tags:
      - user
swagger: "2.0"
