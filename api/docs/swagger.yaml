definitions:
  main.authLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  main.groupAllResponseItem:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  main.groupGetResponse:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  main.groupHistoryResponseItem:
    properties:
      contents:
        type: string
      iat:
        type: integer
      message_id:
        type: integer
      user_ident:
        type: string
    type: object
  main.userBioRequest:
    properties:
      bio:
        type: string
    type: object
  main.userGetResponse:
    properties:
      bio:
        type: string
      display_name:
        type: string
      groups:
        items:
          $ref: '#/definitions/main.userGetResponseGroup'
        type: array
      ident:
        type: string
    type: object
  main.userGetResponseGroup:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  main.userJoinRequest:
    properties:
      group_id:
        type: integer
    type: object
  main.userProfilePicturePostRequest:
    properties:
      jpeg:
        type: string
    type: object
  main.userRegisterRequest:
    properties:
      display_name:
        type: string
      email:
        type: string
      password:
        type: string
    type: object
  main.userRegisterResponse:
    properties:
      ident:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      description: Log in to user and authenticate with the backend
      parameters:
      - description: User login information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.authLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Login user
      tags:
      - auth
  /course/department/{dep}:
    get:
      description: Queries for all UF courses in a three-letter department prefix
      parameters:
      - description: Three-letter department prefix
        in: path
        name: dep
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
        "503":
          description: Service Unavailable
      summary: Get courses in department
      tags:
      - course
  /course/group/{dep}/{code}:
    get:
      description: Gets (or creates) group of specified course
      parameters:
      - description: Three-letter department prefix
        in: path
        name: dep
        required: true
        type: string
      - description: Four-digit course code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      summary: Get group of specified course
      tags:
      - course
  /group/all:
    get:
      description: Gets all public groups
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.groupAllResponseItem'
            type: array
        "500":
          description: Internal Server Error
      summary: Gets groups
      tags:
      - group
  /group/get/{id}:
    get:
      description: Gets group information
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.groupGetResponse'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get group
      tags:
      - group
  /group/history/{id}:
    get:
      description: Gets message history from a group in descending order
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: integer
      - description: Max number of messages to retreive (<= 20)
        in: query
        name: limit
        required: true
        type: integer
      - description: UTC time cutoff; searches in reverse from this point (inclusive)
        in: query
        name: before
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.groupHistoryResponseItem'
            type: array
        "500":
          description: Internal Server Error
      summary: Gets group messages
      tags:
      - group
  /user/bio:
    post:
      description: Updates a user's bio
      parameters:
      - description: User token and new bio
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.userBioRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Updates bio
      tags:
      - user
  /user/get/{ident}:
    get:
      description: Fetches user information and groups
      parameters:
      - description: User identifier
        in: path
        name: ident
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.userGetResponse'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Fetch user
      tags:
      - user
  /user/join:
    post:
      description: Adds a user to a group
      parameters:
      - description: User token and group to join
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.userJoinRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Join group
      tags:
      - user
  /user/profile_picture:
    post:
      description: Uploads a new profile picture, replacing the old one
      parameters:
      - description: User token and profile picture
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.userProfilePicturePostRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Upload profile picture
      tags:
      - user
  /user/profile_picture/{ident}:
    get:
      description: Gets a user's profile picture from their identifier
      parameters:
      - description: User identifier
        in: path
        name: ident
        required: true
        type: string
      produces:
      - image/jpeg
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Retrieves profile picture
      tags:
      - user
  /user/register:
    post:
      description: Registers a new user given the provided arguments
      parameters:
      - description: User registration information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.userRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.userRegisterResponse'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Register a new user
      tags:
      - user
  /ws/{group}:
    get:
      description: Opens a WebSocket for a user on a group
      parameters:
      - description: Group ID
        in: path
        name: group
        required: true
        type: integer
      responses:
        "401":
          description: Unauthorized
      summary: Opens a WebSocket
      tags:
      - ws
swagger: "2.0"
